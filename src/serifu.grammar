@top Doc { (Page | Spread)+ }

Page[group="Pages"] {
	PageToken Panel*
}

Spread[group="Pages"] { 
	SpreadToken Panel*
}

Panel[group="Panels"] {
	PanelToken  (Line | newline)*
}

PageToken { 
	"#" anyText? newline
}

SpreadToken { 
	"##" anyText? newline
}

PanelToken {
	"-" anyText? newline
}

Line[group="Lines"] {
	 (Text | Note | Sfx) 
}

Sfx {
	Star SfxTranslation SfxSource? newline
}

Note {
	noteToken newline
}

Text {
	(Source )? ("/" Style )?  attribToken Content newline
}

Source {
	word
}

Style {
	word
}

Content {
	contentText+
}

contentText {
	( UnstyledText | Bold | BoldItal | Ital | Star | Colon | DoubleStar | Underscore ) | BlockText | StyleBlock 
}

StyleBlock { 
	 styleBlockOpen 
			( UnstyledText | Bold | BoldItal | Ital | Star | Colon | DoubleStar | Underscore | Newline)+
		styleBlockClose 
}

UnstyledText {
	anyText
}

Newline {
  newline
}

@skip {
	space
}

@tokens {
	space { $[\u0009 \u000b\u00a0\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff] }
	newline { $[\r\n\u2028\u2029] }
  attribToken { ":" space* }
	
	wordChar { std.asciiLetter | $[\u{a1}-\u{10ffff}] | std.digit | "-" | "'" | "&" | " "}
	@precedence { Ital, word }
	word { (std.asciiLetter | $[\u{a1}-\u{10ffff}] | std.digit) (wordChar* (std.asciiLetter | $[\u{a1}-\u{10ffff}] | std.digit))? }
	
	anychar { ![:*_\r\n\u2028\u2029] }	
	anyText { anychar+ }	
		
	nonStyleChar { ![_*\n ] }
	
	Star { "*" }
	boldOpen { Star nonStyleChar }
	boldClose { nonStyleChar Star}
	Bold {
		( Star (anychar | Underscore) Star | boldOpen (anyText | Underscore)* boldClose | boldItalOpen (anyText | Underscore)* boldClose )
	}

	DoubleStar { Star Star }
	boldItalOpen { DoubleStar nonStyleChar }
	boldItalClose { nonStyleChar DoubleStar}
	BoldItal {
		(DoubleStar (anychar | Underscore) DoubleStar | boldItalOpen (anyText | Underscore)* boldItalClose)
	}

	Underscore { "_" }
	italOpen { Underscore nonStyleChar }
	italClose { nonStyleChar Underscore}
	Ital {
		( Underscore (anychar | Star) Underscore | italOpen (anyText | Star)* italClose  )
	}
	
	Colon { ":" }

	noteToken { "!" ![\r\n\u2028\u2029]+ }
	SfxTranslation { ![\n)(]+ }
	SfxSource { "(" ![\n)(]+ ")"? }

	BlockText { "/=" BlockTextRest }
	BlockTextRest { ![=] BlockTextRest | "=" BlockTextAfterEquals}
	BlockTextAfterEquals { "/" | "=" BlockTextAfterEquals | ![/=] BlockTextRest }
	
	styleBlockOpen { "===\n" }
	styleBlockClose { "\n==="}

	@precedence { BlockText, styleBlockOpen, styleBlockClose, SfxSource, SfxTranslation, BoldItal, DoubleStar, Star, Bold, Ital, Underscore, anyText, word, newline, space }
}
